% Problem 1 (DFT implementation):
%clc;    % clean the screen
clear;  % clear the memory

% create an arbitary vector  sin(t)
t = 0:0.1:100;
%y = sin(t);
y = t;


% Call the function 
Result1=funcDFT(y);

% Comparison with fft
Result2=fft(y);

Difference= Result2-Result1;

%plot(y,Result1,'r', y,Result2,'b')
figure(1)
plot(y,Result1,'r'')
figure(2)
plot(y,Result2,'b')


% func

function [ output ] = funcDFT( y )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

y1=ones(length(y),1);
y2=(y1*y)';

N=length(y);
n=[0:N-1];
k=[0:N-1]';

% The result is a 2D array such that 
% the columns vary as k varies and rows vary as n varies
h=exp(-i*k*n*2*pi/N);

% Multiply each element in y2 by each element in h
answer=y2.*h;

% We take the sum in row direction ( n direction)
output=sum(answer,1);

% output=sum(answer,2) gives the sum in column direction ( k direction)
end







----------
tic
x = 0;
for k = 2:10
   x(k) = x(k-1) + 5
end
toc
------------

To=[0.1:0.001:10];
w=2*pi*To;
result=2*(sin(w)/w ) *exp(-1j*-2);
plot (w,result)
x = 1:10;
xsums = cumsum(x)
y = xsums(5:5:length(x)); 